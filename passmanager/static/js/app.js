// Generated by CoffeeScript 1.9.0
(function() {
  var buildAddView, buildTableView, cipher, compress, database, db_push, db_url, decipher, decompress, emptyMain, get_url, password, random_password, save, send_via_post;

  db_url = "/get/" + keyring;

  db_push = "/save/" + keyring;

  database = void 0;

  sjcl.random.startCollectors();

  compress = function(message) {
    return Base64.toBase64(RawDeflate.deflate(Base64.utob(message)));
  };

  decompress = function(data) {
    return Base64.btou(RawDeflate.inflate(Base64.fromBase64(data)));
  };

  cipher = function(key, message) {
    return sjcl.encrypt(key, JSON.stringify(message));
  };

  decipher = function(key, data) {
    return JSON.parse(sjcl.decrypt(key, data));
  };

  get_url = function(url, feedback, error) {
    var req;
    req = new XMLHttpRequest();
    req.open('GET', url, true);
    req.onreadystatechange = function(aEvt) {
      if (req.readyState === 4) {
        if (req.status === 200) {
          return feedback(req.responseText);
        } else {
          return error();
        }
      }
    };
    return req.send(null);
  };

  random_password = function() {
    return Math.random().toString(36).slice(2, 12) + Math.random().toString(36).slice(2, 12);
  };

  send_via_post = function(url, data, feedback, error) {
    var req;
    req = new XMLHttpRequest();
    req.open('POST', url, true);
    data = "data=" + encodeURIComponent(data);
    req.setRequestHeader("Content-type", "application/x-www-form-urlencoded");
    req.setRequestHeader("Content-length", data.length);
    req.setRequestHeader("Connection", "close");
    req.onreadystatechange = function(aEvt) {
      if (req.readyState === 4) {
        if (req.status === 200) {
          return feedback(req.responseText);
        } else {
          return error();
        }
      }
    };
    return req.send(data);
  };

  save = function(cb) {
    var data;
    data = cipher(password, window.database);
    console.log(window.database);
    return send_via_post(db_push, data, function(success) {
      console.log("ok");
      if (cb) {
        return cb();
      }
    }, function() {
      return console.log(":(");
    });
  };

  emptyMain = function() {
    var c, myNode, _i, _len, _ref, _results;
    myNode = document.getElementsByTagName("main")[0];
    _ref = myNode.children;
    _results = [];
    for (_i = 0, _len = _ref.length; _i < _len; _i++) {
      c = _ref[_i];
      _results.push(myNode.removeChild(c));
    }
    return _results;
  };

  buildTableView = function() {
    var e, el, input_element, l, main, newpass, table, _i, _j, _k, _l, _len, _len1, _len2, _len3, _ref, _ref1, _ref2, _ref3, _results;
    main = document.getElementsByTagName("main")[0];
    main.innerHTML = "";
    main.innerHTML += "<table><tr><th>Site</th><th>Username</th><th>Password</th><th>Edit</th><th>Delete</th></tr> </table>";
    table = document.querySelector("main table");
    _ref = window.database;
    for (_i = 0, _len = _ref.length; _i < _len; _i++) {
      e = _ref[_i];
      l = document.createElement("tr");
      l.innerHTML = "<tr><td><input readonly name='website' type=\"text\" value=\"" + e.website + "\" /></td><td><input readonly name='username' type=\"text\" value=\"" + e.username + "\" /></td><td><input readonly name='password' class='text-hidden' type=\"text\" value=\"" + e.password + "\" /></td><td><button class=\"edit-a\">Edit</button></td><td><button class=\"delete-a\">Delete</button></td></tr>";
      l.edited = false;
      _ref1 = l.getElementsByTagName("input");
      for (_j = 0, _len1 = _ref1.length; _j < _len1; _j++) {
        input_element = _ref1[_j];
        input_element.addEventListener("keypress", (function(l) {
          return function(evt) {
            if (evt.keyCode === 13) {
              return l.getElementsByClassName("edit-a")[0].click();
            }
          };
        })(l));
      }
      l.getElementsByClassName("edit-a")[0].addEventListener("click", (function(l, e) {
        return function(evt) {
          var btn, element, input, _k, _l, _len2, _len3, _len4, _m, _ref2, _ref3, _ref4;
          if (l.edited) {
            _ref2 = l.getElementsByTagName("input");
            for (_k = 0, _len2 = _ref2.length; _k < _len2; _k++) {
              element = _ref2[_k];
              element.setAttribute("readonly", null);
            }
            _ref3 = l.getElementsByTagName("input");
            for (_l = 0, _len3 = _ref3.length; _l < _len3; _l++) {
              input = _ref3[_l];
              if (input.name === "website") {
                e.website = input.value;
              }
              if (input.name === "password") {
                e.password = input.value;
              }
              if (input.name === "username") {
                e.username = input.value;
              }
            }
            btn = this;
            save(function() {
              btn.innerHTML = "Saved";
              return console.log("done");
            });
          } else {
            _ref4 = l.getElementsByTagName("input");
            for (_m = 0, _len4 = _ref4.length; _m < _len4; _m++) {
              element = _ref4[_m];
              element.removeAttribute("readonly");
            }
            this.innerHTML = "Ok";
          }
          return l.edited = !l.edited;
        };
      })(l, e));
      l.getElementsByClassName("delete-a")[0].addEventListener("click", (function(l, e) {
        return function(evt) {
          window.database.splice(window.database.indexOf(e), 1);
          return save(function() {
            return buildTableView();
          });
        };
      })(l, e));
      table.appendChild(l);
    }
    newpass = document.createElement("tr");
    newpass.innerHTML = "<form><td><input name='website' type='text' placeholder='Website' /></td><td><input name='username' type='text' placeholder='Username' /></td><td><input name='password' type='text' value='" + random_password() + "' /></td><td><button class=\"add\">Add</button></td></form>";
    table.appendChild(newpass);
    newpass.getElementsByClassName("add")[0].addEventListener("click", function(evt) {
      var input, _k, _len2, _ref2;
      e = {};
      _ref2 = newpass.getElementsByTagName("input");
      for (_k = 0, _len2 = _ref2.length; _k < _len2; _k++) {
        input = _ref2[_k];
        if (input.name === "website") {
          e.website = input.value;
        }
        if (input.name === "username") {
          e.username = input.value;
        }
        if (input.name === "password") {
          e.password = input.value;
        }
      }
      console.log(window.database);
      window.database.push(e);
      console.log(window.database);
      return save(function() {
        return buildTableView();
      });
    });
    _ref2 = newpass.getElementsByTagName("input");
    for (_k = 0, _len2 = _ref2.length; _k < _len2; _k++) {
      input_element = _ref2[_k];
      input_element.addEventListener("keypress", (function(l) {
        return function(evt) {
          if (evt.keyCode === 13) {
            return newpass.getElementsByClassName("add")[0].click();
          }
        };
      })(l));
    }
    _ref3 = table.getElementsByClassName('text-hidden');
    _results = [];
    for (_l = 0, _len3 = _ref3.length; _l < _len3; _l++) {
      el = _ref3[_l];
      el.addEventListener('click', function(evt) {
        return this.select();
      });
      _results.push(el.addEventListener('dbclick', function(evt) {
        return this.select();
      }));
    }
    return _results;
  };

  buildAddView = function() {
    var html;
    emptyMain();
    html = "<form>";
    html += "</form>";
    return document.getElementsByTagName("main")[0].innerHTML = html;
  };

  password = null;

  document.getElementById("main-pass-form").addEventListener("submit", function(evt) {
    evt.preventDefault();
    return get_url(db_url, function(data) {
      var err;
      try {
        password = document.getElementById("main-pass-input").value;
        window.database = decipher(password, data);
        return buildTableView();
      } catch (_error) {
        err = _error;
        console.log(err);
        return document.getElementById("info-p").innerHTML = "Invalid main password!";
      }
    }, function() {
      console.log("Erreur pendant le chargement de la base de donn√©es.\n");
      return document.getElementById("info-p").innerHTML = "Unable to load the database";
    });
  });

}).call(this);
